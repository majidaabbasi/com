function injectData(cartData){const items=cartData.items,variantIdsAlongWithDataToBeAdded={};variantIdsAlongWithDataToBeAdded[36757852455075]=0,variantIdsAlongWithDataToBeAdded[36757857534115]=0,variantIdsAlongWithDataToBeAdded[36757863366819]=0,variantIdsAlongWithDataToBeAdded[39508273037475]=0,items.forEach(singleCartItem=>{let additionalPrice=0;if(singleCartItem&&singleCartItem.properties&&(additionalPrice=+singleCartItem.properties.__price,isNaN(additionalPrice)&&(additionalPrice=0)),additionalPrice){const currentQuantity=singleCartItem.quantity;let variantIdToBeAdded="";additionalPrice===1800?variantIdToBeAdded=36757852455075:additionalPrice===2400?variantIdToBeAdded=36757857534115:additionalPrice===2900?variantIdToBeAdded=36757863366819:additionalPrice===1700&&(variantIdToBeAdded=39508273037475),variantIdToBeAdded&&(variantIdsAlongWithDataToBeAdded[variantIdToBeAdded]?variantIdsAlongWithDataToBeAdded[variantIdToBeAdded]+=currentQuantity:variantIdsAlongWithDataToBeAdded[variantIdToBeAdded]=currentQuantity)}}),Object.keys(variantIdsAlongWithDataToBeAdded).length===0?redirectToCheckout():updateItemInCartCustom(variantIdsAlongWithDataToBeAdded)}function redirectToCheckout(){window.location.href="/checkout"}function updateItemInCartCustom(cartNewJson){var e={type:"POST",url:"/cart/update.js",data:{updates:cartNewJson},dataType:"json",success:function(){console.log("data successfully added to cart with extra prices"),redirectToCheckout()},error:function(t,r){console.log("data failed to be added to cart with extra prices",t,r),redirectToCheckout()}};jQuery.ajax(e)}function changeCartItemAttributes(updateJSON){return new Promise(function(resolve){const e={type:"POST",url:"/cart/change.js",data:updateJSON,dataType:"json",success:function(){resolve()},error:function(t,r){resolve()}};jQuery.ajax(e)})}function getCurrentProductDataByHandle(handle){return new Promise(function(resolve){const e={type:"GET",url:`/products/${handle}.js`,dataType:"json",success:function(data){resolve({hasError:!1,data})},error:function(t,r){resolve({hasError:!0})}};jQuery.ajax(e)})}async function updateAllLineItemProperties(currentCartData,hashMapOfVariantsAlongWithDesignCode){try{const itemsToUpdate=currentCartData.items.map((singleCartItem,index)=>{const optionWithValues=singleCartItem.options_with_values;if(optionWithValues&&optionWithValues.length>0){const currentVariantId=singleCartItem.variant_id;let currentProperty=singleCartItem.properties;currentProperty=currentProperty||{};const currentFinalProperties={};Object.entries(currentProperty).forEach(([K,V])=>{K&&V&&(currentFinalProperties[K.toLowerCase()]=V)});const optionWithValuesToObject={};let anyItemsFoundInOptionWithValues=!1;optionWithValues.forEach(singleItem=>{singleItem.name&&singleItem.value&&singleItem.value.toLowerCase()!=="default title"&&(anyItemsFoundInOptionWithValues=!0,optionWithValuesToObject[singleItem.name.toLowerCase()]=singleItem.value)});const finalProperties={...currentProperty,...optionWithValuesToObject};if(finalProperties.size||(anyItemsFoundInOptionWithValues=!0,finalProperties.size="none"),finalProperties.color||(anyItemsFoundInOptionWithValues=!0,finalProperties.color="none"),hashMapOfVariantsAlongWithDesignCode[currentVariantId]){console.log("updating custom variant id"),anyItemsFoundInOptionWithValues=!0;var productHandle=singleCartItem.handle;productHandle=productHandle.toUpperCase();var i=currentVariantId;let design=$(`#${i}_design`),color=$(`#${i}_color`);design||(design=$("#design")),design&&(design=design.val()),color||(color=$("#color")),color&&(color=color.val()),finalProperties.design_code=productHandle,finalProperties.__Color=color,finalProperties.__Design=design}return anyItemsFoundInOptionWithValues?{line:index+1,quantity:singleCartItem.quantity,properties:finalProperties}:null}return null}).filter(item=>item!==null);if(console.log("items to update are: ",itemsToUpdate),itemsToUpdate.length===0){injectData(currentCartData);return}for(const singleItem of itemsToUpdate)await changeCartItemAttributes(singleItem);injectData(currentCartData)}catch{injectData(currentCartData)}}async function pause(time=1e3){return new Promise(resolve=>{setTimeout(resolve,time)})}async function fetchDesignCodeForVariants(listOfHandles,callbackFunction,hashMapForVariantsAsKey={},retryCount=0){let handlesToRetry=await Promise.all(listOfHandles.map(async singleHandle=>{const singleProductData=await getCurrentProductDataByHandle(singleHandle);if(singleProductData.hasError)return singleHandle;let designCode=(singleProductData.data.tags||[]).filter(singleTag=>singleTag&&singleTag.includes("designcode_"));return designCode.length===0||(designCode=designCode.length>0&&designCode[0].replace("designcode_",""),singleProductData.data.variants.forEach(singleVariant=>hashMapForVariantsAsKey[singleVariant.id]=designCode)),null}));if(handlesToRetry=handlesToRetry.filter(singleHandle=>singleHandle!==null),handlesToRetry.length>0&&retryCount<3)return await pause(),await fetchDesignCodeForVariants(handlesToRetry,callbackFunction,hashMapForVariantsAsKey,retryCount+1);console.log("hashMapForVariantsAsKey:  ",hashMapForVariantsAsKey),callbackFunction(hashMapForVariantsAsKey)}function toggleCheckoutButtonLoadingState(isLoading){try{const cartSliderCheckoutButtonLoader=$("#mini-cart-custom-loader"),cartSliderCheckoutButton=$("#cartDWcheckout"),mainCartPageCheckoutButton=$("#cartCheckout");cartSliderCheckoutButtonLoader&&(isLoading?cartSliderCheckoutButtonLoader.show():cartSliderCheckoutButtonLoader.hide()),mainCartPageCheckoutButton&&(isLoading?mainCartPageCheckoutButton.prop("disabled",!0):mainCartPageCheckoutButton.prop("disabled",!1)),cartSliderCheckoutButton&&(isLoading?cartSliderCheckoutButton.prop("disabled",!0):cartSliderCheckoutButton.prop("disabled",!1))}catch{}}function addAdditionalItemsToCart(){toggleCheckoutButtonLoadingState(!0),$.getJSON("/cart.js",function(t){const cartData=t,uniqueHandlesSet=new Set;cartData.items.forEach(singleCurrentItem=>{uniqueHandlesSet.add(singleCurrentItem.handle)});const uniqueHandlesOnly=[...uniqueHandlesSet];fetchDesignCodeForVariants(uniqueHandlesOnly,function(hashMapOfVariantsAlongWithDesignCode){updateAllLineItemProperties(cartData,hashMapOfVariantsAlongWithDesignCode)})})}
//# sourceMappingURL=/cdn/shop/t/98/assets/cart-additonal-unstitched-items.js.map?v=78537540885376155701709009308
