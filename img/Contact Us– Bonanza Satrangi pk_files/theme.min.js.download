function getCookie(name) {
  var nameEQ = name + "=";
  var ca = document.cookie.split(';');
  for(var i=0;i < ca.length;i++) {
    var c = ca[i];
    while (c.charAt(0)==' ') c = c.substring(1,c.length);
    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
  }
  return null;
}
function gm_authFailure() {
  $('.map-section').addClass('map-section--load-error'),
    $('.map-section__container').remove(),
    $('.map-section__link').remove(),
    $('.map-section__overlay').after(
      '<div class="errors text-center">' + theme.strings.authError + '</div>'
    );
}
function productGridView(e) {
  var t = [],
    i = [];
  (productGridElements = $('#' + e + ' .grid-products .grid__item')),
    productGridElements.each(function (e) {
      'none' != $(this).css('clear') && 0 != e && (t.push(i), (i = [])),
        i.push(this),
        productGridElements.length == e + 1 && t.push(i);
    }),
    $.each(t, function () {
      var e = 0,
        t = 0,
        i = 0;
      $.each(this, function () {
        $(this).find('.details').css('height', ''),
          $(this)
            .find('.grid-view_image a.grid-view-item__link')
            .css('height', ''),
          $(this).find('.swatches').css('height', ''),
          (bxHeight = parseInt($(this).find('.details').outerHeight())),
          (elHeight = parseInt($(this).find('.grid-view_image').outerHeight())),
          (swHeight = parseInt($(this).find('.swatches').outerHeight())),
          elHeight > t && (t = elHeight),
          bxHeight > e && (e = bxHeight),
          swHeight > i && (i = swHeight);
      }),
        $.each(this, function () {
//           $(this)
//             .find('.grid-view_image > a.grid-view-item__link')
//             .css('height', t),
            $(this).find('.style3 .swatches').css('height', i),
            $(this).find('.details').css('height', e);
        });
    });
}
var resizeTimer;
(window.theme = window.theme || {}),
  (window.theme = window.theme || {}),
  (theme.Sections = function () {
    (this.constructors = {}),
      (this.instances = []),
      $(document)
        .on('shopify:section:load', this._onSectionLoad.bind(this))
        .on('shopify:section:unload', this._onSectionUnload.bind(this))
        .on('shopify:section:select', this._onSelect.bind(this))
        .on('shopify:section:deselect', this._onDeselect.bind(this))
        .on('shopify:block:select', this._onBlockSelect.bind(this))
        .on('shopify:block:deselect', this._onBlockDeselect.bind(this));
  }),
  (theme.Sections.prototype = _.assignIn({}, theme.Sections.prototype, {
    _createInstance: function (e, t) {
      var i = $(e),
        s = i.attr('data-section-id'),
        n = i.attr('data-section-type');
      if (((t = t || this.constructors[n]), !_.isUndefined(t))) {
        var a = _.assignIn(new t(e), { id: s, type: n, container: e });
        this.instances.push(a);
      }
    },
    _onSectionLoad: function (e) {
      var t = $('[data-section-id]', e.target)[0];
      t && this._createInstance(t);
    },
    _onSectionUnload: function (e) {
      this.instances = _.filter(this.instances, function (t) {
        var i = t.id === e.detail.sectionId;
        return i && _.isFunction(t.onUnload) && t.onUnload(e), !i;
      });
    },
    _onSelect: function (e) {
      var t = _.find(this.instances, function (t) {
        return t.id === e.detail.sectionId;
      });
      !_.isUndefined(t) && _.isFunction(t.onSelect) && t.onSelect(e);
    },
    _onDeselect: function (e) {
      var t = _.find(this.instances, function (t) {
        return t.id === e.detail.sectionId;
      });
      !_.isUndefined(t) && _.isFunction(t.onDeselect) && t.onDeselect(e);
    },
    _onBlockSelect: function (e) {
      var t = _.find(this.instances, function (t) {
        return t.id === e.detail.sectionId;
      });
      !_.isUndefined(t) && _.isFunction(t.onBlockSelect) && t.onBlockSelect(e);
    },
    _onBlockDeselect: function (e) {
      var t = _.find(this.instances, function (t) {
        return t.id === e.detail.sectionId;
      });
      !_.isUndefined(t) &&
        _.isFunction(t.onBlockDeselect) &&
        t.onBlockDeselect(e);
    },
    register: function (e, t) {
      (this.constructors[e] = t),
        $('[data-section-type=' + e + ']').each(
          function (e, i) {
            this._createInstance(i, t);
          }.bind(this)
        );
    },
  })),
  (window.slate = window.slate || {}),
  (slate.rte = {
    wrapTable: function () {
      $('.rte table').wrap('<div class="rte__table-wrapper"></div>');
    },
    iframeReset: function () {
      var e = $(
          '.rte iframe[src*="youtube.com/embed"], .rte iframe[src*="player.vimeo"]'
        ),
        t = e.add('.rte iframe#admin_bar_iframe');
      e.each(function () {
        $(this).wrap('<div class="video-wrapper"></div>');
      }),
        t.each(function () {
          this.src = this.src;
        });
    },
  }),
  (window.slate = window.slate || {}),
  (slate.a11y = {
    pageLinkFocus: function (e) {
      var t = 'js-focus-hidden';
      e.first()
        .attr('tabIndex', '-1')
        .focus()
        .addClass(t)
        .one('blur', function () {
          e.first().removeClass(t).removeAttr('tabindex');
        });
    },
    focusHash: function () {
      var e = window.location.hash;
      e && document.getElementById(e.slice(1)) && this.pageLinkFocus($(e));
    },
    bindInPageLinks: function () {
      $('a[href*=#]').on(
        'click',
        function (e) {
          this.pageLinkFocus($(e.currentTarget.hash));
        }.bind(this)
      );
    },
    trapFocus: function (e) {
      var t = e.namespace ? 'focusin.' + e.namespace : 'focusin';
      e.$elementToFocus || (e.$elementToFocus = e.$container),
        e.$container.attr('tabindex', '-1'),
        e.$elementToFocus.focus(),
        $(document).off('focusin'),
        $(document).on(t, function (t) {
          e.$container[0] === t.target ||
            e.$container.has(t.target).length ||
            e.$container.focus();
        });
    },
    removeTrapFocus: function (e) {
      var t = e.namespace ? 'focusin.' + e.namespace : 'focusin';
      e.$container &&
        e.$container.length &&
        e.$container.removeAttr('tabindex'),
        $(document).off(t);
    },
  }),
  (theme.Images = (function () {
    return {
      preload: function (e, t) {
        'string' == typeof e && (e = [e]);
        for (var i = 0; i < e.length; i++) {
          var s = e[i];
          this.loadImage(this.getSizedImageUrl(s, t));
        }
      },
      loadImage: function (e) {
        new Image().src = e;
      },
      switchImage: function (e, t, i) {
        var s = this.imageSize(t.src),
          n = this.getSizedImageUrl(e.src, s);
        i ? i(n, e, t) : (t.src = n);
      },
      imageSize: function (e) {
        var t = e.match(
          /.+_((?:pico|icon|thumb|small|compact|medium|large|grande)|\d{1,4}x\d{0,4}|x\d{1,4})[_\.@]/
        );
        return null !== t ? t[1] : null;
      },
      getSizedImageUrl: function (e, t) {
        if (null == t) return e;
        if ('master' === t) return this.removeProtocol(e);
        var i = e.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?$/i);
        if (null != i) {
          var s = e.split(i[0]),
            n = i[0];
          return this.removeProtocol(s[0] + '_' + t + n);
        }
        return null;
      },
      removeProtocol: function (e) {
        return e.replace(/http(s)?:/, '');
      },
    };
  })()),
  (theme.Currency = (function () {
    var e = '${{amount}}';
    return {
      formatMoney: function (t, i) {
        'string' == typeof t && (t = t.replace('.', ''));
        var s = '',
          n = /\{\{\s*(\w+)\s*\}\}/,
          a = i || e;
        function o(e, t, i, s) {
          if (
            ((t = t || 2),
            (i = i || ','),
            (s = s || '.'),
            isNaN(e) || null == e)
          )
            return 0;
          var n = (e = (e / 100).toFixed(t)).split('.');
          return (
            n[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + i)
//             (n[1] ? s + n[1] : '')
          );
        }
        switch (a.match(n)[1]) {
          case 'amount':
            s = o(t, 2);
            break;
          case 'amount_no_decimals':
            s = o(t, 0);
            break;
          case 'amount_with_comma_separator':
            s = o(t, 2, '.', ',');
            break;
          case 'amount_no_decimals_with_comma_separator':
            s = o(t, 0, '.', ',');
            break;
          case 'amount_no_decimals_with_space_separator':
            s = o(t, 0, ' ');
        }
        return a.replace(n, s);
      },
    };
  })()),
  (slate.Variants = (function () {
    function e(e) {
      (this.$container = e.$container),
        (this.product = e.product),
        (this.singleOptionSelector = e.singleOptionSelector),
        (this.originalSelectorId = e.originalSelectorId),
        (this.enableHistoryState = e.enableHistoryState),
        (this.currentVariant = this._getVariantFromOptions()),
        $(this.singleOptionSelector, this.$container).on(
          'change',
          this._onSelectChange.bind(this)
        );
    }
    return (
      (e.prototype = _.assignIn({}, e.prototype, {
        _getCurrentOptions: function () {
          var e = _.map(
            $(this.singleOptionSelector, this.$container),
            function (e) {
              var t = $(e),
                i = t.attr('type'),
                s = {};
              if ('radio' === i || 'checkbox' === i)
                return (
                  !!t[0].checked &&
                  ((s.value = t.val()), (s.index = t.data('index')), s)
                );
              (s.value = t.val()), (s.index = t.data('index'));
              var n = s.value.replace(/'/g, "\\'");
              return (
                $('.' + s.index)
                  .find(".swatchInput[value='" + n + "']")
                  .prop('checked', !0),
                $('.' + s.index)
                  .find('.slVariant')
                  .text(s.value),
                s
              );
            }
          );
          return (e = _.compact(e));
        },
        _getVariantFromOptions: function () {
          var e = this._getCurrentOptions(),
            t = this.product.variants;
          return _.find(t, function (t) {
            return e.every(function (e) {
              return _.isEqual(t[e.index], e.value);
            });
          });
        },
        _onSelectChange: function () {
          var e = this._getVariantFromOptions();
          this.$container.trigger({ type: 'variantChange', variant: e }),
            e &&
              (this._updateMasterSelect(e),
              this._updateImages(e),
              this._updatePrice(e),
              this._updateSKU(e),
              (this.currentVariant = e),
              this.enableHistoryState && this._updateHistoryState(e));
        },
        _updateImages: function (e) {
          var t = e.featured_image || {},
            i = this.currentVariant.featured_image || {};
          e.featured_image &&
            t.src !== i.src &&
            this.$container.trigger({ type: 'variantImageChange', variant: e });
        },
        _updatePrice: function (e) {
          (e.price === this.currentVariant.price &&
            e.compare_at_price === this.currentVariant.compare_at_price) ||
            this.$container.trigger({ type: 'variantPriceChange', variant: e });
        },
        _updateSKU: function (e) {
          e.sku !== this.currentVariant.sku &&
            this.$container.trigger({ type: 'variantSKUChange', variant: e });
        },
        _updateHistoryState: function (e) {
          if (history.replaceState && e) {
            var t =
              window.location.protocol +
              '//' +
              window.location.host +
              window.location.pathname +
              '?variant=' +
              e.id;
            window.history.replaceState({ path: t }, '', t);
          }
        },
        _updateMasterSelect: function (e) {
          $(this.originalSelectorId, this.$container).val(e.id);
        },
      })),
      e
    );
  })()),
  (window.theme = window.theme || {}),
  (theme.Header = (function () {
    var e = {
      body: 'body',
      sitenav: '#siteNav',
      navLinks: '#siteNav .lvl1 > a',
      mobilenav: '.mobile-nav-wrapper',
      menuLinks: '#MobileNav .ad',
    };
    return {
      init: function () {
        $('.header-cart,.close-cart').on('click', function (e) {
          e.preventDefault(),
            e.stopPropagation(),
            $('#cart-drawer').toggleClass('active');
        }),
          $('.site-settings').on('click', function () {
            $('#settingsBox').toggleClass('active');
          }),
          $(e.navLinks).each(function () {
            $(this).attr('href') == window.location.pathname &&
              $(this).addClass('active');
          }),
          $('.js-mobile-nav-toggle, .closemobileMenu').on('click', function () {
            $(e.mobilenav).toggleClass('active'),
              $(e.body).toggleClass('menuOn'),
              $('.js-mobile-nav-toggle').toggleClass('open close');
          }),
          $('body').click(function (t) {
            var i = $(t.target);
            i.parents().is(e.mobilenav) ||
              i.parents().is('.js-mobile-nav-toggle') ||
              i.is('.js-mobile-nav-toggle') ||
              ($(e.mobilenav).removeClass('active'),
              $(e.body).removeClass('menuOn'),
              $('.js-mobile-nav-toggle').removeClass('close').addClass('open')),
              i.parents().is('#cart-drawer') ||
                i.is('#cart-drawer') ||
                i.parents().is('.header-cart') ||
                i.is('.header-cart') ||
                $('#cart-drawer').removeClass('active'),
              i.parents().is('#settingsBox') ||
                i.parents().is('.site-settings') ||
                i.is('.site-settings') ||
                $('#settingsBox').removeClass('active');
          }),
          $(e.menuLinks).on('click', function (e) {
            e.preventDefault(),
              $(this).toggleClass('ad-plus-l ad-minus-l'),
              $(this).parent().next().slideToggle();
          });
      },
    };
  })()),
  (window.theme = window.theme || {}),
  (theme.Search = (function () {
    var e = {
      search: '.search',
      searchSubmit: '.search__submit',
      searchInput: '.search__input',
    };
    return {
      init: function () {
        $(e.searchSubmit).on('click', function (t) {
          var i = $(t.target),
            s = i.parents(e.search).find(e.searchInput);
          0 === s.val().length && (t.preventDefault(), searchFocus(s));
        }),
          $('form[action="/search"]')
            .css('position', 'relative')
            .each(function () {
              $(this)
                .find('input[name="q"]')
                .bind('keyup change', function () {
                  var e = $(this).val(),
                    t = $(this).closest('form').find('.search-results');
                console.log('min closest form');
                  e.length > 2
                    ? $.getJSON('/search/suggest.json?q=' + e, {
                        resources: {
                          type: 'product',
                          limit: 8,
                          options: {
                            unavailable_products: 'last',
                            fields:
                              'title,product_type,vendor,variants.title,variants.sku,tag',
                          },
                        },
                      }).done(function (e) {
                        var i = e.resources.results.products;
                        t.empty(),
                          i.length > 0
                            ? ($.each(i, function (e, i) {
                          console.log('e: ',e);
                          console.log('i: ',i);
                                (i = $(
                                  '<li><a href="' +
                                    i.url +
                                    '"><span class="img"><img src="' +
                                    i.featured_image.url +
                                    '" /></span><span class="details">' +
                                    i.title +
                                  
                                  '</span></a></li>'
                                )),
                                  t.append(i);
                              }),
                              t.fadeIn(200))
                            : t.hide();
                      })
                    : t.empty().hide();
                });
            }),
          $('.modalOverly, .closeSearch').bind('click', function () {
            $('body').removeClass('showOverly'),
              $('#searchPopup').removeClass('active');
          }),
          $('.site-header .searchIco').on('click', function (e) {
            e.stopPropagation(),
              $('body').addClass('showOverly'),
              $('#searchPopup').addClass('active'),
              $('input[name=q]').focus();
          });
      },
    };
  })()),
  (function () {
    var e = $('.return-link');
    function t(e) {
      var t = document.createElement('a');
      return (t.ref = e), t.hostname;
    }
    document.referrer &&
      e.length &&
      window.history.length &&
      e.one('click', function (e) {
        e.preventDefault();
        var i = t(document.referrer);
        return t(window.location.href) === i && history.back(), !1;
      });
  })(),
  (theme.Slideshow = (function () {
    this.$slideshow = null;
    var e = {
      wrapper: 'slideshow-wrapper',
      slideshow: 'slideshow',
      currentSlide: 'slick-current',
      video: 'slideshow__video',
      videoBackground: 'slideshow__video--background',
      closeVideoBtn: 'slideshow__video-control--close',
      pauseButton: 'slideshow__pause',
      isPaused: 'is-paused',
    };
    function t(t) {
      (this.$slideshow = $(t)),
        (this.$wrapper = this.$slideshow.closest('.' + e.wrapper)),
        (this.$pause = this.$wrapper.find('.' + e.pauseButton)),
        (this.settings = {
          accessibility: !0,
          arrows: this.$slideshow.data('arrow'),
          dots: this.$slideshow.data('dots'),
          fade: !0,
          rtl: theme.rtl,
          draggable: !0,
          touchThreshold: 20,
          autoplay: this.$slideshow.data('autoplay'),
          autoplaySpeed: this.$slideshow.data('speed'),
        }),
        this.$slideshow.on(
          'beforeChange',
          function (t, s, n, a) {
            var o = s.$slider,
              r = o.find('.' + e.currentSlide),
              c = o.find('.slideshow__slide[data-slick-index="' + a + '"]');
            if (i(r)) {
              var l = r.find('.' + e.video),
                d = l.attr('id');
              theme.SlideshowVideo.pauseVideo(d), l.attr('tabindex', '-1');
            }
            if (i(c)) {
              var h = c.find('.' + e.video),
                u = h.attr('id'),
                p = h.hasClass(e.videoBackground);
              p ? theme.SlideshowVideo.playVideo(u) : h.attr('tabindex', '0');
            }
          }.bind(this)
        ),
        this.$slideshow.on(
          'init',
          function (t, i) {
            var s = i.$slider,
              n = i.$list,
              a = this.$wrapper,
              o = this.settings.autoplay;
            n.removeAttr('aria-live'),
              a.on('focusin', function (e) {
                a.has(e.target).length &&
                  (n.attr('aria-live', 'polite'), o && s.slick('slickPause'));
              }),
              a.on('focusout', function (t) {
                if (a.has(t.target).length && (n.removeAttr('aria-live'), o)) {
                  if ($(t.target).hasClass(e.closeVideoBtn)) return;
                  s.slick('slickPlay');
                }
              }),
              i.$dots &&
                i.$dots.on('keydown', function (e) {
                  37 === e.which && s.slick('slickPrev'),
                    39 === e.which && s.slick('slickNext'),
                    (37 !== e.which && 39 !== e.which) ||
                      i.$dots.find('.slick-active button').focus();
                });
          }.bind(this)
        ),
        this.$slideshow.slick(this.settings),
        this.$pause.on('click', this.togglePause.bind(this));
    }
    function i(t) {
      return t.find('.' + e.video).length;
    }
    return (
      (t.prototype.togglePause = function () {
        var t = '#Slideshow-' + this.$pause.data('id');
        this.$pause.hasClass(e.isPaused)
          ? (this.$pause.removeClass(e.isPaused), $(t).slick('slickPlay'))
          : (this.$pause.addClass(e.isPaused), $(t).slick('slickPause'));
      }),
      t
    );
  })()),
  (window.theme = theme || {}),
  (theme.customerTemplates = (function () {
    function e() {
      $('#RecoverPasswordForm').toggleClass('hide'),
        $('#CustomerLoginForm').toggleClass('hide');
    }
    return {
      init: function () {
        var t;
        '#recover' === window.location.hash && e(),
          $('#RecoverPassword').on('click', function (t) {
            t.preventDefault(), e();
          }),
          $('#HideRecoverPasswordLink').on('click', function (t) {
            t.preventDefault(), e();
          }),
          $('.reset-password-success').length &&
            $('#ResetSuccess').removeClass('hide'),
          (t = $('#AddressNewForm')).length &&
            (Shopify &&
              new Shopify.CountryProvinceSelector(
                'AddressCountryNew',
                'AddressProvinceNew',
                { hideElement: 'AddressProvinceContainerNew' }
              ),
            $('.address-country-option').each(function () {
              var e = $(this).data('form-id'),
                t = 'AddressCountry_' + e,
                i = 'AddressProvince_' + e,
                s = 'AddressProvinceContainer_' + e;
              new Shopify.CountryProvinceSelector(t, i, { hideElement: s });
            }),
            $('.address-new-toggle').on('click', function () {
              t.toggleClass('hide');
            }),
            $('.address-edit-toggle').on('click', function () {
              var e = $(this).data('form-id');
              $('#EditAddress_' + e).toggleClass('hide');
            }),
            $('.address-delete').on('click', function () {
              var e = $(this),
                t = e.data('form-id'),
                i = e.data('confirm-message');
              confirm(i || 'Are you sure you wish to delete this address?') &&
                Shopify.postLink('/account/addresses/' + t, {
                  parameters: { _method: 'delete' },
                });
            }));
      },
    };
  })()),
  (window.theme = window.theme || {}),
  (theme.Filters = (function () {
    var e = 'sort_by',
      t = {
        filterSelection: '.filters-toolbar__input--filter',
        sortSelection: '.filters-toolbar__input--sort',
        defaultSort: '.collection-header__default-sort',
      };
    function i(e) {
      var i = (this.$container = $(e));
      (this.$filterSelect = $(t.filterSelection, i)),
        (this.$sortSelect = $(t.sortSelection, i)),
        (this.$selects = $(t.filterSelection, i).add($(t.sortSelection, i))),
        (this.defaultSort = this._getDefaultSortValue()),
        this._resizeSelect(this.$selects),
        this.$selects.removeClass('hidden'),
        this.$filterSelect.on('change', this._onFilterChange.bind(this)),
        this.$sortSelect.on('change', this._onSortChange.bind(this));
    }
    return (
      (i.prototype = _.assignIn({}, i.prototype, {
        _onSortChange: function (e) {
          var t = this._sortValue();
          t.length
            ? (window.location.search = t)
            : (window.location.href = window.location.href.replace(
                window.location.search,
                ''
              )),
            this._resizeSelect($(e.target));
        },
        _onFilterChange: function (e) {
          (window.location.href =
            this.$filterSelect.val() + window.location.search),
            this._resizeSelect($(e.target));
        },
        _getSortValue: function () {
          return this.$sortSelect.val() || this.defaultSort;
        },
        _getDefaultSortValue: function () {
          return $(t.defaultSort, this.$container).val();
        },
        _sortValue: function () {
          var t = this._getSortValue(),
            i = '';
          return t !== this.defaultSort && (i = e + '=' + t), i;
        },
        _resizeSelect: function (e) {
          e.each(function () {
            var e = $(this),
              t = e.find('option:selected').text(),
              i = $('<span>').html(t);
            i.appendTo('body');
            var s = i.width();
            i.remove(), e.width(s + 10);
          });
        },
        onUnload: function () {
          this.$filterSelect.off('change', this._onFilterChange),
            this.$sortSelect.off('change', this._onSortChange);
        },
      })),
      i
    );
  })()),
  (window.theme = window.theme || {}),
  (theme.HeaderSection = (function () {
    function e() {
      theme.Header.init(), theme.Search.init();
    }
    return (
      (e.prototype = _.assignIn({}, e.prototype, {
        onUnload: function () {
          theme.Header.unload();
        },
      })),
      e
    );
  })()),
  (theme.Maps = (function () {
    var e = 14,
      t = null,
      i = [],
      s = theme.mapKey ? theme.mapKey : '';
    function n(e) {
      (this.$container = $(e)),
        'loaded' === t
          ? this.createMap()
          : (i.push(this),
            'loading' !== t &&
              ((t = 'loading'),
              void 0 === window.google &&
                $.getScript(
                  'https://maps.googleapis.com/maps/api/js?key=' + s
                ).then(function () {
                  (t = 'loaded'),
                    $.each(i, function (e, t) {
                      t.createMap();
                    });
                })));
    }
    return (
      (n.prototype = _.assignIn({}, n.prototype, {
        createMap: function () {
          var t = this.$container.find('.map-section__container');
          return (function (e) {
            var t = $.Deferred(),
              i = new google.maps.Geocoder(),
              s = e.data('address-setting');
            return (
              i.geocode({ address: s }, function (e, i) {
                i !== google.maps.GeocoderStatus.OK && t.reject(i),
                  t.resolve(e);
              }),
              t
            );
          })(t)
            .then(
              function (i) {
                var s = {
                    zoom: e,
                    center: i[0].geometry.location,
                    disableDefaultUI: !0,
                  },
                  n = (this.map = new google.maps.Map(t[0], s));
                (this.center = n.getCenter()),
                  new google.maps.Marker({ map: n, position: n.getCenter() });
                google.maps.event.addDomListener(window, 'resize');
              }.bind(this)
            )
            .fail(function () {
              var e;
              switch (status) {
                case 'ZERO_RESULTS':
                  e = theme.strings.addressNoResults;
                  break;
                case 'OVER_QUERY_LIMIT':
                  e = theme.strings.addressQueryLimit;
                  break;
                default:
                  e = theme.strings.addressError;
              }
              t.parent()
                .addClass('page-width map-section--load-error')
                .html('<div class="errors text-center">' + e + '</div>');
            });
        },
        onUnload: function () {
          google.maps.event.clearListeners(this.map, 'resize');
        },
      })),
      n
    );
  })()),
  (theme.Product = (function () {
    function e(e) {
      var t = (this.$container = $(e)),
        i = t.attr('data-section-id');
      (this.settings = {
        mediaQueryMediumUp: 'screen and (min-width: 768px)',
        mediaQuerySmall: 'screen and (max-width: 767px)',
        bpSmall: !1,
        enableHistoryState: t.data('enable-history-state') || !1,
        imageSize: null,
        imageZoomSize: null,
        namespace: '.slideshow-' + i,
        sectionId: i,
        sliderActive: !1,
        zoomEnabled: !1,
      }),
        (this.selectors = {
          addToCart: '#AddToCart-' + i,
          addToCartText: '#AddToCartText-' + i,
          comparePrice: '#ComparePrice-' + i,
          originalPrice: '#ProductPrice-' + i,
          saveAmount: '#SaveAmount-' + i,
          discountBadge: '.discount-badge',
          SKU: '.variant-sku',
          originalPriceWrapper: '.product-price__price-' + i,
          originalSelectorId: '#ProductSelect-' + i,
          productFeaturedImage: '.FeaturedImage-' + i,
          productImageWrap: '.FeaturedImageZoom-' + i,
          productPrices: '.product-single__price-' + i,
          productThumbImages: '.product-single__thumbnail--' + i,
          productThumbs: '.product-single__thumbnails-' + i,
          saleClasses: 'product-price__sale product-price__sale--single',
          saleLabel: '.product-price__sale-label-' + i,
          singleOptionSelector: '.single-option-selector-' + i,
        });
      var s = $('.orderMsg').attr('data-user'),
        n = $('.orderMsg').attr('data-time');
      $('.orderMsg .items').text(Math.floor(Math.random() * s + 1)),
        $('.orderMsg .time').text(Math.floor(Math.random() * n + 1));
      var a = $('.userViewMsg').attr('data-user'),
        o = $('.userViewMsg').attr('data-time');
      $('.uersView').text(Math.floor(Math.random() * a)),
        setInterval(function () {
          $('.uersView').text(Math.floor(Math.random() * a));
        }, o),
        $('.mfp-link').magnificPopup({
          delegate: '.mfp',
          removalDelay: 300,
          callbacks: {
            beforeOpen: function () {
              $('.stickyHeader').addClass('popup'),
                (this.st.mainClass = this.st.el.attr('data-effect'));
            },
            close: function () {
              $('.stickyHeader').removeClass('popup');
            },
          },
          midClick: !0,
        });
      var r = (this.tabs = '#ProductSection-' + i + ' .tablink');
      $(r).on('click', function (e) {
        e.preventDefault(),
          $(this).parent().addClass('active'),
          $(this).parent().siblings().removeClass('active');
        var t = $(this).attr('href');
        if (
          ($('.tab-content').not(t).css('display', 'none'),
          $(t).fadeIn(),
          $(window).width() < 767)
        ) {
          var i = $(this).offset();
          $('html, body').animate({ scrollTop: i.top }, 500);
        }
      }),
        $('.product-tabs li:first-child').addClass('active'),
        $('.tab-container h3:first-child').addClass('active'),
        $('.tab-container h3:first-child + .tab-content').show(),
        $('.reviewLink').on('click', function (e) {
          e.preventDefault();
          var t = $(this).attr('href');
          $('.product-tabs li').removeClass('active'),
            $(".tablink[href='" + t + "']")
              .parent()
              .addClass('active'),
            $('.tab-content').not(t).css('display', 'none'),
            $(t).fadeIn();
          var i = $(t).offset();
          $(window).width() < 767
            ? $('html, body').animate({ scrollTop: i.top - 50 }, 700)
            : $('html, body').animate({ scrollTop: i.top - 100 }, 700);
        }),
        $('.stickyOptions .selectedOpt').on('click', function () {
          $('.stickyOptions ul').slideToggle('fast');
        }),
        $('.stickyOptions .vrOpt').on('click', function (e) {
          var t = $(this).attr('data-val'),
            s = $(this).attr('data-no'),
            n = $(this).text();
          $('.selectedOpt').text(n),
            $('.stickyCart .selectbox').val(t).trigger('change'),
            $('.stickyOptions ul').slideUp('fast'),
            (this.productvariants = JSON.parse(
              document.getElementById('ProductJson-' + i).innerHTML
            )),
            $('.stickyCart .product-featured-img').attr(
              'src',
              this.productvariants.variants[s].featured_image.src.replace(
                /(\.[^\.]*$|$)/,
                '_60x60$&'
              )
            );
        }),
        (thumbnails = $('.product-single__thumbnail-image')),
        thumbnails.length &&
          thumbnails.bind('click', function () {
            var e = $(this).attr('src').split('?')[0].split('.'),
              t = e.pop(),
              i = e.pop().replace(/_[a-zA-Z0-9@]+$/, ''),
              s = e.join('.') + '.' + i + '.' + t;
            void 0 !== variantImages[s] &&
              productOptions.forEach(function (e, t) {
                (optionValue = variantImages[s]['option-' + t]),
                  null !== optionValue &&
                    $('.single-option-selector:eq(' + t + ') option').filter(
                      function () {
                        return $(this).text() === optionValue;
                      }
                    ).length &&
                    ($('.swatch-' + t)
                      .find('.swatchInput[value="' + optionValue + '"]')
                      .prop('checked', !0),
                    $('.single-option-selector:eq(' + t + ')')
                      .val(optionValue)
                      .trigger('change'));
              });
          }),
        $('#ProductJson-' + i).html() &&
          ((this.productSingleObject = JSON.parse(
            document.getElementById('ProductJson-' + i).innerHTML
          )),
          (this.settings.zoomEnabled = $(
            this.selectors.productFeaturedImage
          ).hasClass('js-zoom-enabled')),
          (this.settings.imageSize = theme.Images.imageSize(
            $(this.selectors.productFeaturedImage).attr('src')
          )),
          this._initBreakpoints(),
          this._stringOverrides(),
          this._initVariants(),
          this._initImageSwitch(),
          this._initmainimageSlider(),
          this._initThumbnailSlider(),
          this._setActiveThumbnail(),
          theme.Images.preload(
            this.productSingleObject.images,
            this.settings.imageSize
          ));
    }
    function t(e) {
      $(e).each(function () {
        var e = $(this).data('zoom');
        $(this).zoom({ url: e });
      });
    }
    function i(e) {
      $(e).each(function () {
        $(this).trigger('zoom.destroy');
      });
    }
    return (
      (e.prototype = _.assignIn({}, e.prototype, {
        _stringOverrides: function () {
          (theme.productStrings = theme.productStrings || {}),
            $.extend(theme.strings, theme.productStrings);
        },
        _initBreakpoints: function () {
          var e = this;
          enquire.register(this.settings.mediaQuerySmall, {
            match: function () {
              e.settings.zoomEnabled && i($(e.selectors.productImageWrap)),
                (e.settings.bpSmall = !0);
            },
            unmatch: function () {
              e.settings.bpSmall = !1;
            },
          }),
            enquire.register(this.settings.mediaQueryMediumUp, {
              match: function () {
                e.settings.zoomEnabled && t($(e.selectors.productImageWrap));
              },
            });
        },
        _initVariants: function () {
          var e = {
            $container: this.$container,
            enableHistoryState:
              this.$container.data('enable-history-state') || !1,
            singleOptionSelector: this.selectors.singleOptionSelector,
            originalSelectorId: this.selectors.originalSelectorId,
            product: this.productSingleObject,
          };
          (this.variants = new slate.Variants(e)),
            this.$container.on(
              'variantChange' + this.settings.namespace,
              this._updateAddToCart.bind(this)
            ),
            this.$container.on(
              'variantImageChange' + this.settings.namespace,
              this._updateImages.bind(this)
            ),
            this.$container.on(
              'variantPriceChange' + this.settings.namespace,
              this._updatePrice.bind(this)
            ),
            this.$container.on(
              'variantSKUChange' + this.settings.namespace,
              this._updateSKU.bind(this)
            );
        },
        _initImageSwitch: function () {
          if ($(this.selectors.productThumbImages).length) {
            var e = this;
            $(this.selectors.productThumbImages).on('click', function (t) {
              t.preventDefault();
              var i = $(this),
                s = i.attr('href'),
                n = i.data('zoom');
              e._setActiveThumbnail(s), e._switchImage(s, n);
            });
          }
        },
        _switchImage: function (e, s) {
          if ($('.index-section--featured-product').length) {
            $(this.selectors.productImageWrap + '[data-zoom="' + s + '"]').data(
              'slide'
            );
            $(this.selectors.productFeaturedImage).attr('src', e),
              this.settings.zoomEnabled &&
                i($(this.selectors.productImageWrap)),
              !this.settings.bpSmall &&
                this.settings.zoomEnabled &&
                s &&
                ($(this.selectors.productImageWrap).data('zoom', s),
                t($(this.selectors.productImageWrap)));
          }
        },
        _setActiveThumbnail: function (e) {
          void 0 === e &&
            (e = $(this.selectors.productThumbImages + '.activeSlide').attr(
              'href'
            ));
          var t = $(this.selectors.productThumbImages + '[href="' + e + '"]');
          $(this.selectors.productThumbImages).removeClass('active-thumb'),
            t.addClass('active-thumb');
          var i = t.parent().data('slide');
          if (
            'style4' == theme.productStrings.prStyle ||
            'style5' == theme.productStrings.prStyle
          ) {
            var s = $(
              ".product-single__photo[data-slide='" + i + "']"
            ).offset();
            $(window).width() > 767
              ? $('html, body').animate({ scrollTop: s.top - 70 }, 700)
              : $('.primgSlider').slick('slickGoTo', i);
          } else $('.primgSlider').slick('slickGoTo', i);
        },
        _initmainimageSlider: function () {
          var e = 1,
            t = !0,
            i = !1,
            s = !1;
          'style2' == theme.productStrings.prStyle
            ? ((e = 2), (t = !1))
            : 'style7' == theme.productStrings.prStyle &&
              ((e = 3), (i = !0), (s = !0), (t = !1)),
            $('.primgSlider').slick({
              slidesToShow: e,
              slidesToScroll: 1,
              infinite: s,
              rtl: theme.rtl,
              fade: t,
              centerMode: i,
              centerPadding: 0,
              asNavFor: this.selectors.productThumbs,
              responsive: [{ breakpoint: 767, settings: { slidesToShow: 1 } }],
            }),
            ('style4' != theme.productStrings.prStyle &&
              'style5' != theme.productStrings.prStyle) ||
              $(window).on('load resize', function () {
                $(window).width() > 767
                  ? $('.primgSlider').slick('unslick')
                  : $('.primgSlider').slick('refresh');
              });
        },
        _initThumbnailSlider: function () {
          var e = !0,
            t = 5;
          'bottom' == $(this.selectors.productThumbs).attr('data-slider') &&
            ((e = !1), (t = 6)),
            $(this.selectors.productThumbs).slick({
              verticalSwiping: !0,
              vertical: e,
              slidesToShow: t,
              slidesToScroll: 1,
              infinite: !1,
              rtl: theme.rtl,
              asNavFor: '.primgSlider',
              focusOnSelect: !0,
              responsive: [
                {
                  breakpoint: 767,
                  settings: {
                    slidesToShow: 5,
                    vertical: !1,
                    swipe: !0,
                    verticalSwiping: !1,
                    draggable: !1,
                  },
                },
              ],
            });
        },
        _updateAddToCart: function (e) {
          var t = e.variant;
          if (t)
            if (
              ($(this.selectors.productPrices)
                .removeClass('visibility-hidden')
                .attr('aria-hidden', 'true'),
              null != t.unit_price
                ? ($('[data-unit-price]').html(
                    theme.Currency.formatMoney(t.unit_price, theme.moneyFormat)
                  ),
                  $('[data-unit-base]').html(
                    t.unit_price_measurement.reference_value +
                      t.unit_price_measurement.reference_unit
                  ),
                  $('.price__unit').removeClass('hide'))
                : $('.price__unit').addClass('hide'),
              t.available)
            ) {
              $(this.selectors.addToCart).prop('disabled', !1),
                $(this.selectors.addToCartText).text(theme.strings.addToCart),
                $('.instock').removeClass('hide'),
                $('.outstock').addClass('hide');
              var i = $('#pvr-' + t.id).text();
              i < $('#quantity_message').data('qty') &&
              0 != i &&
              'shopify' == t.inventory_management
                ? $('#quantity_message').show().find('.items').text(i)
                : $('#quantity_message').hide();
            } else
              $(this.selectors.addToCart).prop('disabled', !0),
                $(this.selectors.addToCartText).text(theme.strings.soldOut),
                $('.instock').addClass('hide'),
                $('.outstock').removeClass('hide'),
                $('#quantity_message').hide();
          else
            $(this.selectors.addToCart).prop('disabled', !0),
              $(this.selectors.addToCartText).text(theme.strings.unavailable),
              $(this.selectors.productPrices)
                .addClass('visibility-hidden')
                .attr('aria-hidden', 'false'),
              $('.instock').addClass('hide'),
              $('.outstock').removeClass('hide'),
              $('#quantity_message').hide();
        },
        _updateImages: function (e) {
          var t,
            i = e.variant,
            s = theme.Images.getSizedImageUrl(
              i.featured_media.preview_image.src,
              this.settings.imageSize
            );
          this._setActiveThumbnail(s),
            this.settings.zoomEnabled &&
              (t = theme.Images.getSizedImageUrl(
                i.featured_media.preview_image.src,
                this.settings.imageZoomSize
              )),
            this._switchImage(s, t);
        },
        _updatePrice: function (e) {
          var t = e.variant;
          if (
            ($(this.selectors.originalPrice).html(
              theme.Currency.formatMoney(t.price, theme.moneyFormat)
            ),
            t.compare_at_price > t.price)
          ) {
            $(this.selectors.comparePrice)
              .html(
                theme.Currency.formatMoney(
                  t.compare_at_price,
                  theme.moneyFormat
                )
              )
              .removeClass('hide'),
              $(this.selectors.originalPriceWrapper).addClass(
                this.selectors.saleClasses
              ),
              $(this.selectors.saleLabel).removeClass('hide');
            var i = t.compare_at_price - t.price,
              s = (100 * i) / t.compare_at_price;
            $(this.selectors.discountBadge)
              .find('.off')
              .find('span')
              .text(+s.toFixed()),
              $(this.selectors.discountBadge).removeClass('hide'),
              $(this.selectors.saveAmount).html(
                theme.Currency.formatMoney(i, theme.moneyFormat)
              );
          } else
            $(this.selectors.comparePrice).addClass('hide'),
              $(this.selectors.saleLabel).addClass('hide'),
              $(this.selectors.discountBadge).addClass('hide'),
              $(this.selectors.originalPriceWrapper).removeClass(
                this.selectors.saleClasses
              );
        },
        _updateSKU: function (e) {
          var t = e.variant;
          $(this.selectors.SKU).html(t.sku);
        },
        onUnload: function () {
          this.$container.off(this.settings.namespace);
        },
      })),
      e
    );
  })()),
  (theme.QuickView = void $('body').on('click', '.quick-view', function (e) {
    $.ajax({
      beforeSend: function () {
        $('body').addClass('loading');
      },
      url: $(this).attr('href'),
      success: function (e) {
        $.magnificPopup.open({
          items: {
            src:
              '<div class="quick-view-popup mfp-with-anim" id="content_quickview">' +
              e +
              '</div>',
            type: 'inline',
          },
          removalDelay: 500,
          callbacks: {
            beforeOpen: function () {
              $('.stickyHeader').addClass('popup'),
                (this.st.mainClass = 'mfp-zoom-in');
            },
            open: function () {
              $.getScript(
                window.location.protocol +
                  '//productreviews.shopifycdn.com/assets/v4/spr.js'
              );
            },
            close: function () {
              $('.stickyHeader').removeClass('popup'),
                $('#content_quickview').empty();
            },
          },
        });
      },
      complete: function () {
        $('body').removeClass('loading');
      },
    }),
      e.preventDefault(),
      e.stopPropagation();
  })),
  (theme.Quotes = (function () {
    var e = {
        mediaQuerySmall: 'screen and (max-width: 749px)',
        mediaQueryMediumUp: 'screen and (min-width: 750px)',
        slideCount: 0,
      },
      t = {
        accessibility: !0,
        arrows: !0,
        dots: !1,
        autoplay: !1,
        touchThreshold: 20,
        rtl: theme.rtl,
        slidesToShow: 1,
        slidesToScroll: 1,
      };
    function i(i) {
      var s = (this.$container = $(i)).attr('data-section-id'),
        n = (this.wrapper = '.quotes-wrapper'),
        a = (this.slider = '#Quotes-' + s),
        o = $(a, n),
        r = !1,
        c = $.extend({}, t, {
          slidesToShow: 1,
          slidesToScroll: 1,
          rtl: theme.rtl,
          adaptiveHeight: !0,
        });
      function l(e, t) {
        r && (e.slick('unslick'), (r = !1)), e.slick(t), (r = !0);
      }
      (e.slideCount = o.data('count')),
        e.slideCount < t.slidesToShow &&
          ((t.slidesToShow = e.slideCount), (t.slidesToScroll = e.slideCount)),
        o.on('init', this.a11y.bind(this)),
        enquire.register(e.mediaQuerySmall, {
          match: function () {
            l(o, c);
          },
        }),
        enquire.register(e.mediaQueryMediumUp, {
          match: function () {
            l(o, t);
          },
        });
    }
    return (
      (i.prototype = _.assignIn({}, i.prototype, {
        onUnload: function () {
          enquire.unregister(e.mediaQuerySmall),
            enquire.unregister(e.mediaQueryMediumUp),
            $(this.slider, this.wrapper).slick('unslick');
        },
        onBlockSelect: function (e) {
          var t = $(
            '.quotes-slide--' + e.detail.blockId + ':not(.slick-cloned)'
          ).data('slick-index');
          $(this.slider, this.wrapper).slick('slickGoTo', t);
        },
        a11y: function (e, t) {
          var i = t.$list,
            s = $(this.wrapper, this.$container);
          i.removeAttr('aria-live'),
            s.on('focusin', function (e) {
              s.has(e.target).length && i.attr('aria-live', 'polite');
            }),
            s.on('focusout', function (e) {
              s.has(e.target).length && i.removeAttr('aria-live');
            });
        },
      })),
      i
    );
  })()),
  (theme.slideshows = {}),
  (theme.SlideshowSection = (function () {
    return function (e) {
      var t = (this.$container = $(e)).attr('data-section-id'),
        i = (this.slideshow = '#Slideshow-' + t);
      $('.slideshow__video', i).each(function () {
        var e = $(this);
        theme.SlideshowVideo.init(e),
          theme.SlideshowVideo.loadVideo(e.attr('id'));
      }),
        (theme.slideshows[i] = new theme.Slideshow(i));
    };
  })()),
  (theme.SlideshowSection.prototype = _.assignIn(
    {},
    theme.SlideshowSection.prototype,
    {
      onUnload: function () {
        delete theme.slideshows[this.slideshow];
      },
      onBlockSelect: function (e) {
        var t = $(this.slideshow),
          i = $(
            '.slideshow__slide--' + e.detail.blockId + ':not(.slick-cloned)'
          ).data('slick-index');
        t.slick('slickGoTo', i).slick('slickPause');
      },
      onBlockDeselect: function () {
        $(this.slideshow).slick('slickPlay');
      },
    }
  )),
  (theme.collectionView = (function () {
    return function (e) {
      var t = (this.$container = $(e)),
        i = t.attr('data-section-id');
      t.attr('data-section-timeout'),
        (ajaxfilter = function (e) {
          var t,
            s,
            n =
              ((s = {}),
              location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (
                e,
                t,
                i
              ) {
                s[t] = i;
              }),
              t ? s[t] : s);
          if ((n = $.param(n))) {
            var a = e.split('?');
            e = a.join('?');
          }
          $.ajax({
            type: 'GET',
            url: e,
            data: {},
            beforeSend: function () {
              $('body').addClass('loading hideOverly');
            },
            complete: function (t) {
              $('.productList .grid-products').html(
                $('.productList .grid-products', t.responseText).html()
              ),
                $('.productList .grid-products').html(
                  $('.productList .grid-products', t.responseText).html()
                ),
                $('.filters-toolbar__product-count').html(
                  $('.filters-toolbar__product-count', t.responseText).html()
                ),
                $('.sidebar_tags').html(
                  $('.sidebar_tags', t.responseText).html()
                ),
                check_filters(),
                $('.pagination').html($('.pagination', t.responseText).html()),
                $('.pagination', t.responseText).html()
                  ? $('.pagination').show()
                  : $('.pagination').hide(),
                $('.infinitpaginOuter').html(
                  $('.infinitpaginOuter', t.responseText).html()
                ),
                $('.infinitpaginOuter', t.responseText).html() ||
                  $('.infinitpagin').remove(),
                theme.mlcurrency && currenciesChange('sapn.money'),
                $('body').removeClass('loading hideOverly'),
                loadMoreBtn(),
                $('.spr-badge').length > 0 &&
                  $.getScript(
                    window.location.protocol +
                      '//productreviews.shopifycdn.com/assets/v4/spr.js'
                  ),
                productGridView(i),
                setTimeout(function () {
                  productGridView(i);
                }, 1e3),
                history.pushState({ page: e }, e, e);
            },
          });
        }),
        $(window).on('load delayed-resize', function (e, t) {
          productGridView(i);
        }),
        (infiniteScroll = function () {
          var e = 'scroll load delayed-resize';
          $(window).on(e, function () {
            var t = $('.infinitpagin a').attr('href');
            if ($('.infinitpagin a.infinite').length) {
              var i = $('.infinitpagin').offset();
              $(document).scrollTop() + $(window).height() - 50 > i.top &&
                ($(window).off(e), loadMore(t));
            }
          });
        }),
        (loadMoreBtn = function () {
          $('.infinitpagin a.loadMore').click(function (e) {
            e.preventDefault();
            var t = $(this).attr('href');
            loadMore(t);
          });
        }),
        (loadMore = function (e) {
          e.length &&
            $.ajax({
              type: 'GET',
              dataType: 'html',
              url: e,
              beforeSend: function () {
                'button' == $('.infinitpaginOuter').attr('data-type')
                  ? $('body').addClass('loading hideOverly')
                  : $('.infinitpagin a').show();
              },
              complete: function (e) {
                $('.productList .grid-products').length
                  ? $('.productList .grid-products').append(
                      $('.productList .grid-products', e.responseText).html()
                    )
                  : $('.productList .list-view-items').append(
                      $('.productList .list-view-items', e.responseText).html()
                    ),
                  $('.infinitpagin', e.responseText).html()
                    ? $('.infinitpagin').html(
                        $('.infinitpagin', e.responseText).html()
                      )
                    : $('.infinitpagin').remove(),
                  theme.mlcurrency && currenciesChange('sapn.money'),
                  productGridView(i),
                  $('.spr-badge').length > 0 &&
                    $.getScript(
                      window.location.protocol +
                        '//productreviews.shopifycdn.com/assets/v4/spr.js'
                    ),
                  setTimeout(function () {
                    productGridView(i);
                  }, 1e3),
                  $('.infinitpagin a.loadMore').length
                    ? loadMoreBtn()
                    : infiniteScroll(),
                  $('body').removeClass('loading hideOverly');
              },
            });
        }),
        $(document).ready(function () {
          infiniteScroll(),
            loadMoreBtn(),
            $('#collection-slideshow, #sideProdSlider').slick({
              dots: !1,
              infinite: !0,
              autoplay: !0,
              autoplaySpeed: 7e3,
              speed: 600,
              rtl: theme.rtl,
              slidesToShow: 1,
              slidesToScroll: 1,
            });
        });
    };
  })()),
  (theme.instagram = {}),
  (theme.instagramSection = (function () {
    return function (e) {
      var t = (this.$container = $(e)),
        i = t.attr('data-section-id'),
        s = t.attr('data-from'),
        n = t.attr('data-user'),
        a = t.attr('data-tag'),
        o = t.attr('data-image'),
        r = t.attr('data-count');
      'user' == s
        ? $.instagramFeed({
            username: n,
            container: '#instafeed' + i,
            items: r,
            styling: !1,
            image_size: o,
          })
        : $.instagramFeed({
            tag: a,
            container: '#instafeed' + i,
            items: r,
            styling: !1,
            image_size: o,
          }),
        $('#instafeed' + i + '.insta-slick').slick();
    };
  })()),
  (theme.carousel = (function () {
    return function (e) {
      var t = (this.$container = $(e)),
        i = t.attr('data-section-id'),
        s = $(t).find('.carousel'),
        n = (this.tabs = '#' + i + ' .tablink'),
        a = (this.tabcontent = '#' + i + ' .tab-content');
      if (
        ($(n).on('click', function (e) {
          e.preventDefault(),
            $(this).parent().addClass('active'),
            $(this).parent().siblings().removeClass('active');
          var t = $(this).attr('href');
          $(a).not(t).css('display', 'none'),
            $(t).fadeIn(),
            $(s).slick('refresh'),
            productGridView(i + ' ' + t);
        }),
        $('#' + i).each(function () {
          $(this).find('.collection-tabs li:first-child').addClass('active'),
            $(this)
              .find('.tab-container .acor-ttl:first-child')
              .addClass('active'),
            $(this).find('.tab-container h3:first-child + .tab-content').show(),
            $(this).find('.collection-tabs li:first-child a').attr('href');
        }),
        'recently-viewed' == i)
      ) {
        var o = t.attr('data-pr');
        $.ajax({
          url:
            '/pages/recently-viewed-products/' +
            $.cookie('recentproducts') +
            '__pr=' +
            o,
          dataType: 'html',
          type: 'GET',
          success: function (e) {
            $(e).find('.grid-view-item').length &&
              $('#productSlider-recently-viewed').html(e);
          },
          error: function (e) {
            console.log('ajax error');
          },
          complete: function () {
            $(s).slick('refresh'),
              productGridView(i),
              setTimeout(function () {
                productGridView(i);
              }, 1500),
              theme.mlcurrency &&
                currenciesChange('#productSlider-recently-viewed span.money');
          },
        });
      }
      $(s).slick(),
        productGridView(i),
        setTimeout(function () {
          productGridView(i);
        }, 1500),
        $(window).on('delayed-resize', function (e, t) {
          productGridView(i);
        });
    };
  })()),
  (theme.masonary = (function () {
    return function (e) {
      var t = (this.$container = $(e)),
        i = t.attr('data-section-id'),
        s = (this.masonary = $(t).find('.grid-masonary'));
      function n(e) {
        $(e).masonry({
          columnWidth: '.grid-sizer-' + i,
          itemSelector: '.ms-item',
          percentPosition: !0,
        });
      }
      n(s),
        setTimeout(function () {
          n(s);
        }, 1e3);
    };
  })()),
  (theme.ajaxCart = function () {
    function e(e, t, i) {
      $('body').addClass('loading'),
        CartJS.addItem(e, t, i, {
          success: function (e, t, i) {
            setTimeout(function () {
              $('body').removeClass('loading showOverly'),
                $('.block-cart').addClass('active');
            }, 1e3),
              (drawerTimeout = setTimeout(function () {
                $('.block-cart').removeClass('active');
              }, 7e3));
          },
          error: function (e, t, i) {
            var s = JSON.parse(e.responseText).description;
            $('body').removeClass('loading'),
              $('.error-message').text(s),
              $('body').addClass('showOverly'),
              $('#errorDrawer').fadeIn(500),
              (drawerTimeout = setTimeout(function () {
                $('body').removeClass('loading showOverly'),
                  $('#errorDrawer').fadeOut(200);
              }, 6e3));
          },
        });
    }
    function t() {
      var e = $('.freeShipMsg').attr('data-price') - CartJS.cart.total_price;
      e > 0
        ? ($('.freeShipMsg .freeShip').html(
            theme.Currency.formatMoney(e, theme.moneyFormat)
          ),
          $('.freeShipMsg').show(),
          $('.freeShipclaim').hide(),
          theme.mlcurrency &&
            currenciesChange('.freeShipMsg .freeShip sapn.money'))
        : ($('.freeShipMsg').hide(), $('.freeShipclaim').show());
    }
    $(document).on('click touch', '.quickShop', function (e) {
      e.preventDefault(), e.stopImmediatePropagation();
      var t = $(this).attr('href'),
        i = $(this).parents('.grid-view-item').find('.grid-view_image'),
        s = $(this).parents('.grid-view-item').find('.shopWrapper'),
        n = $(this).parents('.grid-view-item').find('.quickShop');
      $.ajax({
        url: t,
        dataType: 'html',
        type: 'GET',
        beforeSend: function () {
          $(i).addClass('showLoading');
        },
        success: function (e) {
          $('.shopWrapper').removeClass('active').html(''),
            $('.quickShop').removeClass('hide'),
            $(s).addClass('active').html(e),
            $(n).addClass('hide');
        },
        complete: function (e) {
          $(i).removeClass('showLoading'),
            theme.mlcurrency &&
              currenciesChange(
                '.shopWrapper.active .product-single__price span.money'
              ),
            $('.closeShop').click(function (e) {
              $(this).parents('.shopWrapper').removeClass('active'),
                $(this)
                  .parents('.grid-view-item')
                  .find('.quickShop')
                  .removeClass('hide');
            });
        },
      });
    }),
      $(document).on('click touch', '.add-to-cart', function (t) {
        console.log('add to cart called in min.js');
        if (
          (t.preventDefault(), t.stopImmediatePropagation(), theme.ajax_cart)
        ) {
          var i = $(this).attr('id'),
            s = $(this).attr('rel');
            const variantId = i;
            console.log('variant id found is ',variantId);
            console.log('composite key found is: ',`#${variantId}_design_code`);
          let designCode = $(`#${i}_design_code`);
          let hsCode = $(`#${i}_hscode`);
          let design = $(`#${i}_design`);
          let color = $(`#${i}_color`);
          if(!designCode){
            designCode = $(`#design_code`);
          }
          if (designCode) {
            designCode = designCode.val();
          }
          if(!hsCode){
            hsCode = $(`#hscode`);
          }
          if (hsCode) {
            hsCode = hsCode.val();
          }
          if(!design){
         design = $(`#design`);
        }
       if(design){
        design = design.val();
       }
      if(!color){
        color = $(`#color`);
      }
      if(color){
        color = color.val();
      }
          const additionalPropertiesObjToSend = {};
          if (designCode) {
            additionalPropertiesObjToSend['design_code'] = designCode;
          }
          if (hsCode) {
            additionalPropertiesObjToSend['__hscode'] = hsCode;
          }
          if(design){
        additionalPropertiesObjToSend['__Design'] = design;
      }
      if(color){
        additionalPropertiesObjToSend['__Color'] = color;
      }

          e(i, s, additionalPropertiesObjToSend);
        } else $(this).next().submit();
      }),
      $(document).on('click touch', '.product-form__cart-submit', function (t) {
        if ((t.preventDefault(), 'disabled' != $(this).attr('disabled')))
          if (theme.ajax_cart) {
            const queryString = window.location.search;
            const urlParams = new URLSearchParams(queryString);
            const productType = urlParams.get('utm_medium');
            let recommendedProduct = false;
            if (productType == 'recommended') {
              recommendedProduct = true;
            }
            var thisUserSession = getCookie("visitedShopCast");
            var productId = $(this).closest('form').find('select[name=id]').val();
            gtag('event','add_to_cart_shopcast', {
              'items':[{
                'id':productId,
              }],
              'VisitedShopCast': thisUserSession,
              'recommendedByShopCast': recommendedProduct
            });
            var i = $(this).closest('form').find('select[name=id]').val();
            i || (i = $(this).closest('form').find('input[name=id]').val());
            var s = $(this).closest('form').find('input[name=quantity]').val();
            s || (s = 1);
            var n = {};
            const variantId = i;
            let hsCode = $(`#${variantId}_hscode`);

          if(!hsCode){
            hsCode = $(`#hscode`);
          }
          if (hsCode) {
            hsCode = hsCode.val();
          }

      
          const additionalPropertiesObjToSend = {};
          if (hsCode) {
            additionalPropertiesObjToSend['hscode'] = hsCode;
          }
            $('[name*="properties"]').each(function () {
              var e = $(this).attr('name').split('[')[1].split(']')[0],
                t = $(this).val();
              n[e] = t;
            }),
//               n['__recommendedByShopCast'] = recommendedProduct;
              e(i, s, n);
          } else $('.productForm').submit();
      }),
      $(document).on('click', '.addto-wishlist', function (e) {
        e.preventDefault();
        var t = $(this).attr('rel');
        if (null == $.cookie('wishlistList')) var i = t;
        else if (-1 == $.cookie('wishlistList').indexOf(t))
          var i = $.cookie('wishlistList') + '__' + t;
        $.cookie('wishlistList', i, { expires: 30, path: '/' }),
          $(this)
            .find('.ad')
            .removeClass('ad-heart-l')
            .addClass('ad-circle-notch-r ad-spin'),
          setTimeout(function () {
            $('.wishlist[rel="' + t + '"]')
              .removeClass('addto-wishlist')
              .find('span')
              .text(theme.wlAvailable),
              $('.wishlist[rel="' + t + '"] .ad')
                .removeClass('ad-circle-notch-r ad-spin')
                .addClass('ad-heart');
          }, 2e3);
      }),
      (function () {
        try {
          if (
            null != $.cookie('wishlistList') &&
            '__' != $.cookie('wishlistList') &&
            '' != $.cookie('wishlistList')
          )
            for (
              var e = String($.cookie('wishlistList')).split('__'), t = 0;
              t < e.length;
              t++
            )
              '' != e[t] &&
                ($('.wishlist[rel="' + e[t] + '"]')
                  .removeClass('addto-wishlist')
                  .find('span')
                  .text(theme.wlAvailable),
                $('.wishlist[rel="' + e[t] + '"] .ad')
                  .removeClass('ad-heart-l')
                  .addClass('ad-heart'));
        } catch (e) {}
      })(),
      t(),
      $('.continue-shopping, .modalOverly, .closeDrawer').click(function () {
        $('.modal').fadeOut(200), $('body').removeClass('loading showOverly');
      }),
      $(document).on('cart.requestComplete', function (e, i) {
        theme.mlcurrency && currenciesChange('#cart-drawer sapn.money'),
          setTimeout(function () {
            t();
          }, 3e3);
      });
  }),
  $(theme.ajaxCart),
  $(document).ready(function () {
    var e = new theme.Sections();
    e.register('header-section', theme.HeaderSection),
      e.register('cart-template', theme.Cart),
      e.register('product', theme.Product),
      e.register('collection-template', theme.Filters),
      e.register('collection-template', theme.collectionView),
      e.register('product-template', theme.Product),
      e.register('map', theme.Maps),
      e.register('slideshow-section', theme.SlideshowSection),
      e.register('carousel', theme.carousel),
      e.register('quotes', theme.Quotes),
      e.register('masonary', theme.masonary),
      e.register('instagram', theme.instagramSection);
  }),
  $(window).resize(function () {
    clearTimeout(resizeTimer),
      (resizeTimer = setTimeout(function () {
        $(window).trigger('delayed-resize');
      }, 250));
  }),
  (theme.init = function () {
    theme.customerTemplates.init(),
      slate.rte.wrapTable(),
      slate.rte.iframeReset(),
      slate.a11y.pageLinkFocus($(window.location.hash)),
      $('.in-page-link').on('click', function (e) {
        slate.a11y.pageLinkFocus($(e.currentTarget.hash));
      }),
      $('a[href="#"]').on('click', function (e) {
        e.preventDefault();
      });
  }),
  $(theme.init),
  $(document).ready(function () {
    'use strict';
    $(document).on('click', '.currencyOpt', function (e) {
      $('#CurrencySelector').val($(this).data('value')),
        $('#localization_form').submit();
    }),
      $('.saleTime, .heroSaleTime').each(function () {
        var e = $(this),
          t = $(this).data('date'),
          i = new Date(t).getTime(),
          s = setInterval(function () {
            var t = new Date().getTime(),
              n = i - t,
              a = Math.floor(n / 864e5),
              o = Math.floor((n % 864e5) / 36e5),
              r = Math.floor((n % 36e5) / 6e4),
              c = Math.floor((n % 6e4) / 1e3);
            (a = ('00' + a).substr(a > 99 ? -3 : -2)),
              (o = ('00' + o).substr(-2)),
              (r = ('00' + r).substr(-2)),
              (c = ('00' + c).substr(-2)),
              $(e)
                .find('.counter')
                .html(
                  "<span class='days'>" +
                    a +
                    '<span>' +
                    theme.days +
                    "</span></span> <span class='hours'>" +
                    o +
                    '<span>' +
                    theme.hours +
                    "</span></span> <span class='minutes'>" +
                    r +
                    '<span>' +
                    theme.minuts +
                    "</span></span> <span class='seconds'>" +
                    c +
                    '<span>' +
                    theme.seconds +
                    '</span>'
                ),
              n < 0 && (clearInterval(s), $(e).hide());
          }, 1e3);
      }),
      $('.btn-shop').click(function () {
        $('.products .grid-lb, .grid-lookbook').removeClass('active'),
          $(this).next().addClass('active'),
          $(this).parents('.grid-lookbook').addClass('active');
      }),
      $('.btn-shop-close').click(function () {
        $(this).parent().removeClass('active');
      }),
      'true' != $.cookie('promotion') && $('.notification-bar').show(),
      $('.close-announcement').click(function () {
        $('.notification-bar').slideUp(),
          $.cookie('promotion', 'true', { expires: 1, path: '/' });
      }),
      $('.btn-filter').click(function () {
        $('.filterbar').toggleClass('active');
      }),
      $('.closeFilter').click(function () {
        $('.filterbar').removeClass('active');
      }),
      $('body').click(function (e) {
        var t = $(e.target);
        t.parents().is('.filterbar') ||
          t.is('.filterbar') ||
          t.is('.btn-filter') ||
          $('.filterbar').removeClass('active');
      }),
      (window.onscroll = function () {
        !(function () {
          theme.fixedHeader &&
            ($(window).scrollTop() > 145
              ? ($('#headerWrapper').addClass(
                  'stickyHeader animated fadeInDown'
                ),
                $('#header').css('min-height', $('#headerWrapper').height()))
              : ($('#headerWrapper').removeClass('stickyHeader fadeInDown'),
                $('#header').css('min-height', '')));
          $(window).scrollTop() > 600 && $('.stickyCart').length
            ? ($('body.template-product').css('padding-bottom', '70px'),
              $('.stickyCart').slideDown())
            : ($('body.template-product').css('padding-bottom', '0'),
              $('.stickyCart').slideUp());
          $(window).scrollTop() > 200
            ? $('#site-scroll').fadeIn()
            : $('#site-scroll').fadeOut();
        })();
      }),
      $('#site-scroll').click(function () {
        return $('html, body').animate({ scrollTop: 0 }, 1e3), !1;
      }),
      $('.footer-links .h4').click(function () {
        $(window).width() < 750 &&
          ($(this).toggleClass('active'), $(this).next().slideToggle());
      }),
      $('.qtyBtn').on('click', function () {
        var e = $(this).parent('.qtyField'),
          t = $(e).find('.qty').val(),
          i = 1;
        $(this).is('.plus')
          ? (i = parseInt(t) + 1)
          : t > 1 && (i = parseInt(t) - 1),
          $(e).find('.qty').val(i);
      }),
      $(document).on(
        'click',
        '.grid-view-item .swatches li:not(.noImg)',
        function (e) {
          var t = $(this).attr('rel'),
            i = $(this).parents('.grid-view-item'),
            s = $(this),
            n = $(this).parents('.swatches').children('.swatch');
          return (
            $(i).find('.grid-view_image').addClass('showLoading'),
            $(i).find('.variantImg').attr({ src: t }),
            $(i)
              .find('.variantImg')
              .load(function () {
                $(n).removeClass('active'),
                  $(s).addClass('active'),
                  $(this)
                    .parents('.swatches')
                    .children('.swatch')
                    .addClass('active'),
                  $(i)
                    .find('.grid-view_image')
                    .removeClass('showLoading')
                    .addClass('showVariantImg');
              }),
            !1
          );
        }
      ),
      theme.animationMobile &&
        $(window).width() < 767 &&
        $('.wow').removeClass('wow'),
      theme.animation && new WOW().init();
  });
